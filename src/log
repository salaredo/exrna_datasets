#import /data/list copy.txt in R
#converted original data/list file from a Unix Executable File to a plain text file named "list copy.txt"

list_copy <- read.table("~/Code/exrna_datasets/data/list copy.txt", quote="\"", as.is=TRUE, colClasses="character", comment.char="", stringsAsFactors=FALSE)

#downloading URL using curl package in R
setwd("/Users/Sarah/Code/exrna_datasets/tmp")
for (url in list_copy$V1) {download.file(url, destfile=basename(url), method="curl")}

# unpack data files
namefiles<-data.frame(list.files(path="/Users/Sarah/Code/exrna_datasets/tmp/"))
for(file in namefiles$list.files.path.....Users.Sarah.Code.exrna_datasets.tmp...) {
   untar(file, files="sample_Sample_*_fastq/readCounts_miRNAprecursor_sense.txt", exdir="/Users/Sarah/Code/exrna_datasets/txt")
}

#############################################################################################

#Renaming txt files
setwd("/Users/Sarah/Code/exrna_datasets/txt")

#Isolate gene names from folder file name
dir<-paste(getwd())
dir2<-paste(dir, "/", sep="")
nameGene<-paste(dir, "/", dir(dir), sep="")
nameGene1<-gsub("sample_Sample_", "", nameGene)
nameGene2<-gsub("_fastq", "", nameGene1)
nameGene3<-gsub(dir2, "", nameGene2) #nameGene3 will now print each gene name

#Create new path for renaming txt files
renameFile<-paste(nameGene, "/", nameGene3, sep="")
renameFile1<-paste(renameFile, "_", "readCounts_miRNAprecursor_sense.txt", sep="")
renameFile2<-gsub("readCounts_", "", renameFile1)

#Create directories for rename.file
dirFile<-paste(nameGene, "/", "readCounts_miRNAprecursor_sense.txt", sep="")

#Rename files
file.rename(dirFile, renameFile2)

#move files from parent directory to a new folder containing only the txt files

txtfile<-gsub("/Users/Sarah/Code/exrna_datasets/txt/sample_Sample_.*_fastq/", "", renameFile2) #isolates invidual txt file names

setwd("/Users/Sarah/Code/exrna_datasets/results")
dir3<-paste(getwd())
renameFile3<-paste(dir3, "/", txtfile, sep="") #creates directory to move file to

file.rename(renameFile2, renameFile3) #move files between directories

#delete empty folders
unlink(nameGene, recursive=TRUE)

### switch to R

library(data.table)

type <- "miRNAprecursor_sense"

# read in all files
files <- list.files(path="../tmp", pattern = type, full.names = TRUE)
data <- list()
for ( file in files ){
   print(file)
   sample <- gsub(paste("_",type,".txt",sep=""),"",gsub(".*/","",file))
   data[[sample]] <- fread(file,header=TRUE,stringsAsFactors=FALSE)

   # just get multimapAdjustedReadCount column
   data[[sample]] <- data[[sample]][,.(ReferenceID,multimapAdjustedReadCount)]
   colnames(data[[sample]])[2] <- paste(sample,colnames(data[[sample]])[2],sep="_")
   
   setkey(data[[sample]],ReferenceID)
}

# merge columns
output <- data.table(ReferenceID=data[[1]][,ReferenceID])
setkey(output, ReferenceID)
for( sample in names(data) ) {
   print(sample)
   output <- merge(output, data[[sample]], all=TRUE)
   print(dim(output))
}

# filter out rows with > 90% NA
naCount <- apply(output,1,function(x){sum(is.na(x))})
output <- output[naCount < dim(output)[2]*.9,]

# extract miRNA symbols from referenceID column
if( grepl( "miRNA", type ) ){
   # first convert to mirbase ID
   z <- sapply(output$ReferenceID,function(x){return(strsplit(x,":")[[1]][2])})

   # convert mirbase ID to Entrez gene ID
   require(mygene)
   y <- queryMany(z, scopes="miRBase", fields="entrezgene", species="human")
   output$ReferenceID <- y$entrezgene
}

# convert all NA to 0
output[is.na(output)] <- 0

# write output file
write.table(output, paste("../results/",type,"_output.txt",sep=""), row.names=FALSE, sep="\t")
